###############################################################################
# Copyright (c) 2010, 2021 IBM Corporation.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License 2.0
# which accompanies this distribution, and is available at
# https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#    IBM Corporation - initial implementation
#    IBM Corporation/Andrew Johnson - Hprof additions
###############################################################################
BaseProvider.defaultType.help = Choose SYSTEM for a full system dump, optionally processed with jextract, \
with full object, class, field name data and full field and array values. \n\
Choose HEAP for a Portable Heap Dump, with object and class sizes and references, \
but without field names, or primitive field and array values.\n\
Choose JAVA for a Javadump, with only classes, class loaders and thread stacks \
but without object or class sizes or references, \
field names, or primitive field and array values.\n\
Choose HPROF for a full dump from OpenJDK or Oracle-based JVMs, \
with full object, class, field name data and full field and array values.
BaseProvider.defaultLive.help = Whether to dump live objects only. Selecting this may force a garbage collection on the target process before the dump.\n\
Required when using some versions of jcmd.
BaseProvider.defaultCompress.help = Whether to compress the generated dump, to save disk space at the possible cost of a longer load time.
BaseProvider.listAttach.help = Whether to attach to every running JVM to get more details when listing all JVMs. This takes longer and may affect the JVM.
BaseProvider.systemDumpTemplate.help = A template for the suggested system dump file name.
BaseProvider.systemDumpZipTemplate.help = A template for the suggested compressed system dump file name.
BaseProvider.heapDumpTemplate.help = A template for the suggested heap dump file name.
BaseProvider.heapDumpZipTemplate.help = A template for the suggested compressed heap dump file name.
BaseProvider.javaDumpTemplate.help = A template for the suggested Java dump file name.
BaseProvider.hprofDumpTemplate.help = A template for the suggested HPROF dump file name.
IBMExecDumpProvider.name = Attach API using a helper JVM
IBMExecDumpProvider.help = This generates a dump from an OpenJ9 or IBM JVM, using a helper OpenJ9 or IBM JVM \
with the Attach API to list the OpenJ9 or IBM JVMs and to attach to the target.\n\
Also works for generating dumps from or OpenJDK or Oracle-based JVMs using a helper OpenJDK or Oracle-based JDK JVM. \
Also works with the 'jcmd' utility.
IBMExecDumpProvider.javaexecutable.help = Path to an OpenJ9 or IBM 'java' executable, to provide the Attach API \
to list and dump the target OpenJ9 or IBM JVMs.\n\
Also can be a path to an OpenJDK or Oracle-based JDK 'java' executable, to provide the Attach API \
to list and dump the OpenJDK or Oracle-based target JVMs.\n\
Also can be a path to a 'jcmd' executable, to list and dump the target JVMs.
IBMExecDumpProvider.javaList.help = Paths to possible 'java' executables. Not used \
directly but can be copied and pasted into the 'javaexecutable' field. \
Clear the list to refresh.
IBMExecDumpProvider.vmoptions.help = Options with which to run the helper JVM.
IBMDumpProvider.name = Attach API
IBMDumpProvider.help = This generates a dump from an OpenJ9 or IBM JVM, using the Attach API \
supplied with the OpenJ9 or IBM JVM used to run Memory Analyzer \
to list the OpenJ9 or IBM JVMs and to attach to the target.\n\
Also works when MAT is run with an OpenJDK or Oracle-based JDK JVM for generating dumps from OpenJDK or Oracle-based JVMs.
IBMVmInfo.name = Configuration for a dump using the Attach API
IBMVmInfo.help = This generates a dump from an OpenJ9 or IBM JVM using the Attach API.\n\
Also works when MAT is run with an OpenJDK or Oracle-based JDK JVM for generating dumps from OpenJDK or Oracle-based JVMs.
IBMVmInfo.type.help = Choose SYSTEM for a full system dump, optionally processed with jextract, \
with full object, class, field name data and full field and array values. \n\
Choose HEAP for a Portable Heap Dump, with object and class sizes and references, \
but without field names, or primitive field and array values.\n\
Choose JAVA for a Javadump, with only classes, class loaders and thread stacks \
but without object or class sizes or references, \
field names, or primitive field and array values.\n\
Choose HPROF for a full dump from OpenJDK or Oracle-based JVMs, \
with full object, class, field name data and full field and array values.
IBMVmInfo.live.help = Whether to dump live objects only. Selecting this may force a garbage collection on the target process before the dump.\n\
Required when using some versions of jcmd.
IBMVmInfo.compress.help = Whether to compress the generated dump with jextract or gzip, to save disk space at the possible cost of a longer load time.
IBMVmInfo.dumpdir.help = Alternative location used to find where the target JVM generates dump files. \
If not specified then the system property 'user.dir' on the target JVM is used to find the dump files.\n\
This option can be useful when JVM options have been used to select an alternative dump location or \
on the Windows 7 operating system when writes to the program directory %ProgramFiles(x86)% \
have been redirected to %LOCALAPPDATA%\\VirtualStore or %USERPROFILE%\\AppData\\Local\\VirtualStore.
IBMExecVmInfo.name = Configuration for a dump using a helper JVM with the Attach API
IBMExecVmInfo.help = This generates a dump from an OpenJ9 or IBM JVM, using a helper OpenJ9 or IBM JVM \
to attach to the target OpenJ9 or IBM JVM.\n\
Also works with a helper OpenJDK or Oracle-based JDK JVM for generating dumps from OpenJDK or Oracle-based JVMs.
IBMExecVmInfo.javaexecutable.help = Path to an OpenJ9 or IBM 'java' executable, \
to provide the Attach API to attach to the target OpenJ9 or IBM JVM.\n\
Also can be a path to an OpenJDK or Oracle-based JDK 'java' executable to provide the Attach API \
to dump the OpenJDK or Oracle-based target JVMs.\n\
Also can be a path to a 'jcmd' executable, to dump the target JVMs.
IBMExecVmInfo.vmoptions.help = Options with which to run the helper JVM.
