<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2020 IBM Corporation.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License 2.0
    which accompanies this distribution, and is available at
    https://www.eclipse.org/legal/epl-2.0/
    
    SPDX-License-Identifier: EPL-2.0
   
    Contributors:
        IBM Corporation - initial implementation
 -->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd" >
<reference id="ref_inspections_group_by_value" xml:lang="en-us">
	<title>Reference Leak</title>
	<shortdesc>Find incorrect uses of soft or weak references.
	</shortdesc>
	<prolog>
		<copyright>
			<copyryear year=""></copyryear>
			<copyrholder>
				Copyright (c) 2020 IBM Corporation.
			    All rights reserved. This program and the accompanying materials
			    are made available under the terms of the Eclipse Public License 2.0
			    which accompanies this distribution, and is available at
			    https://www.eclipse.org/legal/epl-2.0/
			</copyrholder>
		</copyright>
	</prolog>
	<refbody>
		<section>
			<title>Motivation</title>
			<p>Soft references <codeph>java.lang.ref.SoftReference</codeph> and
			weak references <codeph>java.lang.ref.WeakReference</codeph> are used
			to keep references to objects which can be cleared by garbage collection
			if there are no other strong references.</p>
			<p>Soft references can be used for object caching, so that
			an object can usually be retained for fast access, but if
			memory is tight then garbage collection can break the link and free the
			object. Next time it is needed then the application program can
			regenerate the object.</p>
			<p>Weak references can be used in a weak hash map <codeph>java.util.WeakHashMap</codeph> to hold information associated with
			another object, but if that object is no longer available
			then the associated information can be freed too.</p>
			<p>Sometimes an error in the application program can mean that
			the object which is supposed to be softly or weakly referenced is 
			also strongly retained by the reference object. For example the
			key of a weak hash map is weakly retained, but if there is a strong
			reference to it from the value of the weak hash map entry then the
			object will never be freed.</p>
		</section>
		<section>
			<title>Operation</title>
			<p>This query performs the following steps:
			<ol>
			<li>For each reference object supplied to the query, 
			find the object referred to by the reference object via the
			reference field.</li>
			<li>Find all the objects strongly retained by the reference object.</li>
			<li>Find if the object from the first step is also in the
			second list. If so:
				<ol>
					<li>Generate a tree with a path showing the reference object, the referent
					and the strong path to the referent.</li>
					<li>Generate a tree showing paths from GC roots to the
					reference object including showing field names.</li>
				</ol>
			</li>
			</ol>
			</p>
			<p>This type of query is also performed by the component report.
			</p>
		</section>
		<section>
			<title>Arguments</title>
			<simpletable>
				<sthead>
					<stentry>Argument</stentry>
					<stentry>Description</stentry>
				</sthead>
				<strow>
					<stentry>objects</stentry>
					<stentry>Reference objects for which the reference leaks query should be run.</stentry>
				</strow>
				<strow>
					<stentry><parmname>-referent_attribute</parmname></stentry>
					<stentry>The referent field name for the reference objects.
					The default is <codeph>referent</codeph></stentry>
				</strow>
				<strow>
					<stentry><parmname>-maxresults</parmname></stentry>
					<stentry>The maximum number of objects for which a tree should be shown.</stentry>
				</strow>
				<strow>
					<stentry><parmname>-maxobjs</parmname></stentry>
					<stentry>The maximum number of objects to be examined for leaks. A random selection of the total objects will be chosen.</stentry>
				</strow>
				<strow>
					<stentry><parmname>-factor</parmname></stentry>
					<stentry>For common paths, how much to truncate the path as the number of objects reduces.</stentry>
				</strow>
			</simpletable>
		</section>
		<section id="result">
			<title>Result</title>
		</section>
	</refbody>
</reference>
