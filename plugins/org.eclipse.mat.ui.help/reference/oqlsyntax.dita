<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2008, 2020 SAP AG and IBM Corporation.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License 2.0
    which accompanies this distribution, and is available at
    https://www.eclipse.org/legal/epl-2.0/
    
    SPDX-License-Identifier: EPL-2.0
   
    Contributors:
        SAP AG - initial API and implementation
 -->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd" >
<reference id="ref_oqlsyntax" xml:lang="en-us">
	<title>OQL Syntax</title>
	<shortdesc />

	<prolog>
		<copyright>
			<copyryear year=""></copyryear>
			<copyrholder>
				Copyright (c) 2008, 2020 SAP AG and others.
			    All rights reserved. This program and the accompanying materials
			    are made available under the terms of the Eclipse Public License 2.0
			    which accompanies this distribution, and is available at
			    https://www.eclipse.org/legal/epl-2.0/
			</copyrholder>
		</copyright>
	</prolog>


	<refbody>
		<section>
			<p>
				Memory Analyzer has a built-in object query language
				(OQL) that allows to query the heap dump with custom
				SQL-like queries. Just think of classes as tables,
				objects as rows, and fields as columns. The basic syntax
				is this:</p>
				<codeblock>SELECT * FROM [ INSTANCEOF ]	&lt;class_name&gt; [ WHERE &lt;filter-expression&gt;]
				</codeblock> 	
		</section>
	</refbody>
</reference>
