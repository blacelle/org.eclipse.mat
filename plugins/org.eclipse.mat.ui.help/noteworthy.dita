<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2008, 2020 SAP AG, IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License 2.0
    which accompanies this distribution, and is available at
    https://www.eclipse.org/legal/epl-2.0/
    
    SPDX-License-Identifier: EPL-2.0
   
    Contributors:
        SAP AG - initial API and implementation
        IBM Corporation - 1.4, 1.7, 1.8, 1.9, 1.10, 1.11 updates
 -->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd" >
<reference id="ref_noteworthy" xml:lang="en-us">
	<title>New and Noteworthy</title>
	<shortdesc>Here are descriptions of some of the more interesting or
		significant changes made to <keyword>Eclipse Memory Analyzer</keyword> for the 1.11 release.
	</shortdesc>
	<prolog>
		<copyright>
			<copyryear year=""></copyryear>
			<copyrholder>
				Copyright (c) 2008, 2020 SAP AG, IBM Corporation and others.
			    All rights reserved. This program and the accompanying materials
			    are made available under the terms of the Eclipse Public License 2.0
			    which accompanies this distribution, and is available at
			    https://www.eclipse.org/legal/epl-2.0/
			</copyrholder>
		</copyright>
	</prolog>
	<refbody>
		<section>
			<title>Enhancements and fixes</title>
			<ul>
			<li>The snapshot comparison queries have been enhanced to properly
			compare trees as well as tables.
			Also, a leak suspect report can be run on two snapshots to show possible memory leaks
			using the difference between the two snapshots of the memory usage of objects and components.</li>
			<li>Memory Analyzer now has a configuration option to allow an attempt to analyse
			huge heap dumps, bigger than Memory Analyzer could handle in previous version. It does this
			by optionally discarding some objects from the heap dump while building the snapshot, with
			the hope that the important objects have not been discarded.</li>
			<li>Stand-alone Eclipse Memory Analyzer is now based on Eclipse 2020-03 which
			may give a slightly improved user interface compared to previous versions.
			As a consequence, stand-alone Eclipse Memory Analyzer is only available for
			the following platforms.
				<ul>
					<li>Windows (x86_64)</li>
					<li>Mac OS X (Mac/Cocoa x86_64)</li>
					<li>Linux (x86_64/GTK+)</li>
					<li>Linux (PPC64LE/GTK+)</li>
				</ul>
			The macOS build is now signed and notarized.
			</li>
			</ul>
		</section>
		<section>
			<title>Fix details</title>
			<ul>
				<li>Fix for <xref format="html" scope="external" 
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=305154">305154</xref>
					Extend the programming model for MAT Queries - enable programming
					of queries doing comparison</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=324970">324970</xref>
					Provide a mechanism to continue manual analysis from MAT's
					automatic reports</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=330074">330074</xref>
					null returns from SnapshotImpl methods</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=347648">347648</xref>
					Retained size column is not compared</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=558593">558593</xref>
					Failing to write a report ZIP causes the report query to fail</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=561460">561460</xref>
					More comparison queries</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=561776">561776</xref>
					Improve handling of FINALIZABLE and UNFINALIZED</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=561976">561976</xref>
					Improve duplicate classes query</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=562926">562926</xref>
					Use simultaneous release repo for Hamcrest</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=562972">562972</xref>
					Tests more queries and improve collection queries</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=563960">563960</xref>
					Requested length of new long exceeds limit of 2,147,483,639</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=565502">565502</xref>
					Poor performance with bad hashing on HashMapIntObject</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=566282">566282</xref>
					Cannot install on latest MacOS version Catalina 10.15</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=566673">566673</xref>
					java.lang.ArrayIndexOutOfBoundsException in
					GarbageCleaner.java</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=566917">566917</xref>
					Occasional poor performance with GZip HPROF</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=567048">567048</xref>
					Add detailed progress to group by value query</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=567070">567070</xref>
					Optimize progress monitor calculation</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=567256">567256</xref>
					Improve help and minor updates</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=567433">567433</xref>
					Update MAT version to 1.11.0</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=567564">567564</xref>
					Single query report</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=567917">567917</xref>
					Add some more network object name resolvers</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=568217">568217</xref>
					Better links for stack frame for thread overview</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=305152">305152</xref>
					Improvements to the displayed comparison results</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=346513">346513</xref>
					TextResult link with target=_blank doesn't work</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=537252">537252</xref>
					Cheatsheet fixes</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=560704">560704</xref>
					Class cast exception opening Path To GC Roots query</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=563793">563793</xref>
					Feature request: Add lock information to Thread Overview and Stacks
					query</li>
				<!--
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=564133">564133</xref>
					Feature request: Add splash screen to MAT <span>[new/unresolved]</span></li>
				-->
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=565962">565962</xref>
					Show the thread and stack frame holding the leaked objects</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=567414">567414</xref>
					Build standalone MAT packages with a newer Eclipse release</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=567533">567533</xref>
					Reports have a white background with dark theme</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=567758">567758</xref>
					Add Close to the left and right option to tabs</li>
				<li>Fix for <xref format="html" scope="external"
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=568352">568352</xref>
					Better JDT integration</li>
			</ul>
		</section>

		<section>
			<title>Security fixes</title>
			Memory Analyzer 1.11 includes the security fixes first included in Memory Analyzer 1.9.2.
			We highly recommend users of Eclipse Memory Analyzer version 1.9.1 or earlier to update to version 1.11.0 (or 1.10.0 or 1.9.2) or subsequent versions.
			<dl>
				<dlentry>
					<dt><xref format="html" scope="external" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-17634">CVE-2019-17634</xref></dt>
						<dd><dl>
							<dlentry>
								<dt>PROBLEMTYPE</dt>
								<dd>CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</dd>
							</dlentry>
							<dlentry>
								<dt>DESCRIPTION</dt>
								<dd>Eclipse Memory Analyzer version 1.9.1 and earlier is subject to a cross site scripting (XSS) vulnerability when generating an HTML report from a malicious heap dump. The user must chose to download, open the malicious heap dump and generate an HTML report for the problem to occur. The heap dump could be specially crafted, or could come from a crafted application or from an application processing malicious data. The vulnerability is present when a report is generated and opened from the Memory Analyzer graphical user interface, or when a report generated in batch mode is then opened in Memory Analyzer or by a web browser. The vulnerability could possibly allow code execution on the local system when the report is opened in Memory Analyzer.</dd>
							</dlentry>
						</dl></dd>
				</dlentry>
				<dlentry>
					<dt><xref format="html" scope="external" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-17635">CVE-2019-17635</xref></dt>
						<dd><dl>
							<dlentry>
								<dt>PROBLEMTYPE</dt>
								<dd>CWE-502: Deserialization of Untrusted Data</dd>
							</dlentry>
							<dlentry>
								<dt>DESCRIPTION</dt>
								<dd>Eclipse Memory Analyzer version 1.9.1 and earlier is subject to a deserialization vulnerability if an index file of a parsed heap dump is replaced by a malicious version and the heap dump is reopened in Memory Analyzer. The user must chose to reopen an already parsed heap dump with an untrusted index for the problem to occur. The problem can be averted if the index files from an untrusted source are deleted and the heap dump is opened and reparsed. Also some local configuration data is subject to a deserialization vulnerability if the local data were to be replaced with a malicious version. This can be averted if the local configuration data stored on the file system cannot be changed by an attacker. The vulnerability could possibly allow code execution on the local system.</dd>
							</dlentry>
						</dl></dd>
				</dlentry>
			</dl>
		</section>
		<section>
			<title>New and Noteworthy for Memory Analyzer 1.10</title>
			<p>
				The New and Noteworthy document for version 1.10 is available 
				<xref format="html" scope="peer" href="http://www.eclipse.org/mat/1.10.0/noteworthy.html">here</xref>.
			</p>
		</section>
	</refbody>
</reference>
